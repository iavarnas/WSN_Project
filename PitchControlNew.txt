import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
from PIL import Image, ImageTk


# Function to handle login
def login():
   username = username_entry.get()
   password = password_entry.get()


   # For demonstration, we'll just show a message box
   # In a real application, you'd validate the username and password here
   if username == "admin" and password == "1234":
       messagebox.showinfo("Login Successful", f"Welcome, {username}!")
       login_window.destroy()
       create_main_window()
   else:
       messagebox.showerror("Login Failed", "Invalid username or password")


def create_main_window():
   # Create the main window
   root = tk.Tk()
   root.title("Pitch Control")


   # Ensure the window resizes properly with the content
   root.rowconfigure(0, weight=1)
   root.columnconfigure(0, weight=1)


   # -------------------- STYLING AND IMAGES -------------------- #
   s = ttk.Style()
   s.configure('MainFrame.TFrame', background="white")
   s.configure('UserFrame.TFrame', background="white", relief = "raised")
   s.configure("AngularVelocityFrame.TFrame", background="white")
   s.configure("AnimationFrame.TFrame", background="white")
   s.configure("SerialMonitorFrame.TFrame", background="white")
   s.configure("FunctionsFrame.TFrame", background="#387ADF")
   s.configure("UserFrameLabel.TLabel",
               background="white",
               font=('Montserrat', 11),
               foreground='#387ADF',
               padding=(5, 5, 5, 5),
               width=18
               )
   s.configure("DateAndTimeLabel.TLabel",
               background="white",
               font=('Montserrat', 11),
               foreground='#387ADF',
               padding=(5, 5, 5, 5),
               width=18
               )

   # region Images
   LogoImageObject = Image.open("images/logo_image.png").resize((220, 220))
   LogoImage = ImageTk.PhotoImage(LogoImageObject)

   ParametersImageObject = Image.open("images/counters.png").resize((1000, 254))
   ParametersImage = ImageTk.PhotoImage(ParametersImageObject)


   # -------------------- WIDGETS & FRAMES CONFIGURATION -------------------- #


   # The Screen Pixel Quality (width x height) = 1460 x 914
   MainFrame = ttk.Frame(root, width=1460, height=914, style='MainFrame.TFrame')
   MainFrame.grid(sticky="NSEW")

   UserFrame = ttk.Frame(MainFrame, width=250, height=914, style='UserFrame.TFrame')
   UserFrame.grid(row=0, column=0, rowspan=2, sticky='NSEW')

   AngularVelocityFrame = ttk.Frame(MainFrame, width=505, height=330, style='AngularVelocityFrame.TFrame')
   AngularVelocityFrame.grid(row=0, column=1, sticky='NSEW')

   AnimationFrame = ttk.Frame(MainFrame, width=505, height=330, style='AnimationFrame.TFrame')
   AnimationFrame.grid(row=0, column=2, sticky='NSEW')

   SerialMonitorFrame = ttk.Frame(MainFrame, width=1010, height=254, style='SerialMonitorFrame.TFrame')
   SerialMonitorFrame.grid(row=1, column=1, columnspan=2, sticky='NSEW')
   # εδώ θα βάλουμε "μετρητές" θερμοκρασίες αέρα, κατεύθυνση αέρα, ημερήσια παραγωγή

   FunctionsFrame = ttk.Frame(MainFrame, width=200, height=914, style='FunctionsFrame.TFrame')
   FunctionsFrame.grid(row=0, column=3, rowspan=2, sticky='NSEW')

   # UserFrame Section
   LogoLabel = ttk.Label(UserFrame, image=LogoImage, background="white")
   LogoLabel.grid(row=0, column=0, sticky='N')
   LogoLabel.configure(anchor="center")

   ParameterLabel = ttk.Label(SerialMonitorFrame, image=ParametersImage, background="white")
   ParameterLabel.grid(row = 2, column = 0)
   ParameterLabel.configure(text= "\n\n\n\n", anchor="center")


   # UserFrameLabel
   UserFrameLabel = ttk.Label(UserFrame, text=
                              "\n\n\n\n\n\n"
                              "Name: Admin\n"
                              "Engineer's ID: A123456\n"
                              "Occupation: Engineer\n"
                              "Turbine Unit: X257\n",
                              style="UserFrameLabel.TLabel"
                              )
   UserFrameLabel.grid(row=1, column=0, sticky='SWE')
   UserFrameLabel.configure(
      anchor="center",
      font=("Montserrat", 13)
   )
   # DateAndTimeLabel
   DateAndTimeLabel = ttk.Label(UserFrame, text=
                                "\n\n\n\n\n\n\n\n\n\n\n\n"
                                "Date: 20/04/2024\n"
                                "Time: 12:40 p.m.\n"
                                "Region: Thessaloniki \n",
                                style="DateAndTimeLabel.TLabel"
                                )
   DateAndTimeLabel.grid(row=2, column=0, sticky='SWE')
   DateAndTimeLabel.configure(
      anchor="center",
      font=("Montserrat", 13)
   )
   # Buttons Configuration
   # Add buttons to FunctionsFrame
   btn1 = ttk.Button(FunctionsFrame, text="Button 1")
   btn2 = ttk.Button(FunctionsFrame, text="Button 2")
   btn3 = ttk.Button(FunctionsFrame, text="Button 3")
   btn4 = ttk.Button(FunctionsFrame, text="Button 4")

   btn1.grid(row=0, column=0, padx=20, pady=10, sticky="EW")
   btn2.grid(row=1, column=0, padx=20, pady=10, sticky="EW")
   btn3.grid(row=2, column=0, padx=20, pady=10, sticky="EW")
   btn4.grid(row=3, column=0, padx=20, pady=10, sticky="EW")

   # -------------------- GRID CONFIGURATION -------------------- #
   # Configure rows and columns for MainFrame
   MainFrame.rowconfigure(0, weight=1)
   MainFrame.rowconfigure(1, weight=1)
   MainFrame.columnconfigure(0, weight=1)
   MainFrame.columnconfigure(1, weight=1)
   MainFrame.columnconfigure(2, weight=1)
   MainFrame.columnconfigure(3, weight=1)


   # Ensure the MainFrame fills the root window
   root.grid_rowconfigure(0, weight=1)
   root.grid_columnconfigure(0, weight=1)


   root.mainloop()


# Create the login window
login_window = tk.Tk()
login_window.title("Login")


# Create a frame for the login form
login_frame = ttk.Frame(login_window, padding="20")
login_frame.grid(row=0, column=0, sticky="NSEW")


# Configure the grid
login_window.columnconfigure(0, weight=1)
login_window.rowconfigure(0, weight=1)
login_frame.columnconfigure(0, weight=1)
login_frame.columnconfigure(1, weight=1)


# Username label and entry
username_label = ttk.Label(login_frame, text="Username:")
username_label.grid(row=0, column=0, sticky="W", pady=5)
username_entry = ttk.Entry(login_frame)
username_entry.grid(row=0, column=1, sticky="EW", pady=5)


# Password label and entry
password_label = ttk.Label(login_frame, text="Password:")
password_label.grid(row=1, column=0, sticky="W", pady=5)
password_entry = ttk.Entry(login_frame, show="*")
password_entry.grid(row=1, column=1, sticky="EW", pady=5)


# Login button
login_button = ttk.Button(login_frame, text="Login", command=login)
login_button.grid(row=2, column=0, columnspan=2, pady=10)


# Make the login frame fill the window
login_frame.grid_columnconfigure(0, weight=1)
login_frame.grid_columnconfigure(1, weight=1)


# Run the login window
login_window.mainloop()

